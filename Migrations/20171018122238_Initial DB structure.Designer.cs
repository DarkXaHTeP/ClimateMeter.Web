// <auto-generated />
using ClimateMeter.Web.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ClimateMeter.Web.Migrations
{
    [DbContext(typeof(ClimateMeterContext))]
    [Migration("20171018122238_Initial DB structure")]
    partial class InitialDBstructure
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClimateMeter.Web.DAL.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<Guid>("DeviceId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(260);

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("ClimateMeter.Web.DAL.SensorReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("DeviceId");

                    b.Property<decimal>("Humidity");

                    b.Property<DateTimeOffset>("ReceivedOn");

                    b.Property<decimal>("Temperature");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.ToTable("SensorReadings");
                });

            modelBuilder.Entity("ClimateMeter.Web.DAL.SensorReading", b =>
                {
                    b.HasOne("ClimateMeter.Web.DAL.Device", "Device")
                        .WithMany("SensorReadings")
                        .HasForeignKey("DeviceId")
                        .HasPrincipalKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
